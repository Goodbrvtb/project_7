import React from "react";

import "./style.css";
import HomeTitle from "../../homeTitle";
import reactTop from "../../../assets/reactTop.jpg";
function RectStart() {
  return (
    <HomeTitle
      title={
        <section className="content-block">
          <h2 className="content-title">React - это…</h2>
          <div className="text-block">
            <p>
              Привет, будущий программист! Рад видеть тебя здесь. Добро
              пожаловать в учебник по React. В этом учебнике ты будешь изучать
              React, шаг за шагом, чтобы ты мог освоить его и создавать
              веб-приложения. Давай начнем с рассказа о некоторых особенностях
              React.
            </p>
            <p>
              React — это библиотека JavaScript для создания UI (user
              interface), разработанная командой Facebook, и она уже давно
              завоевала популярность среди разработчиков по всему миру.
            </p>
            <h2 className="content-title">Что делает React таким особенным?</h2>
            <p>
              Одной из главных особенностей React является его компонентный
              подход. React позволяет разбивать пользовательский интерфейс на
              небольшие, независимые компоненты. Каждый компонент имеет свою
              логику, состояние и представление, что делает код более
              организованным и легко поддерживаемым. Ты можешь переиспользовать
              компоненты, комбинировать их и создавать сложные интерфейсы без
              лишнего повторения кода.
            </p>
            <p>
              История React начинается в 2011 году, когда Facebook столкнулся с
              проблемой медленной отрисовки своих страниц. Именно тогда был
              создан первоначальный прототип React. Вскоре после этого Facebook
              решил сделать React открытым для сообщества разработчиков, и в
              2013 году была выпущена первая версия React. С тех пор React
              получил широкую поддержку и активное сообщество разработчиков.
            </p>
            <p>
              Большое количество известных компаний, таких как Instagram,
              Airbnb, Netflix и WhatsApp, используют React в своих продуктах.
              Это свидетельствует о том, что React является надежным и
              проверенным инструментом для создания масштабируемых
              веб-приложений.
            </p>
            <p>
              Теперь давай поговорим о рейтинге React. React находится в топе
              списка популярных JavaScript-библиотек и фреймворков уже несколько
              лет подряд (~7 лет). Это обусловлено не только его
              функциональностью и эффективностью, но и активной поддержкой со
              стороны Facebook и сообщества разработчиков. Регулярные обновления
              и развитие позволяют React оставаться на переднем крае
              веб-технологий.
            </p>
            <img className="react-top" src={reactTop} alt="React Top" />
            <h2 className="content-title"> Основные понятия и аббревиатуры </h2>
            <p>
              SPA - Single Page Application - это веб-приложение, которое
              загружает одну страницу и динамически обновляет ее содержимое при
              необходимости, без перезагрузки страницы. React как раз и
              используется для создания SPA.
            </p>
            <p>
              CRA - Create React App - это инструмент командной строки для
              быстрого создания нового проекта React. Он автоматически
              настраивает новый проект и включает в себя многие инструменты и
              библиотеки, необходимые для разработки веб-приложений на React.
            </p>
            <p>
              JSX - Синтаксис расширения JavaScript, используемый в React для
              описания структуры пользовательского интерфейса. Он позволяет
              встраивать код JavaScript в HTML-подобную разметку.
            </p>
            <p>
              NPM - Node Package Manager - это менеджер пакетов (библиотек) для
              JavaScript. NPM используется для управления зависимостями проекта
              и установки необходимых библиотек. NPM также позволяет
              разработчикам публиковать свои пакеты и делиться ими с другими
              разработчиками. Написал свою библиотеку и другие разработчики
              могут переиспользовать ее. Круто же
            </p>
            <p>
              WEB-интерфейс - это способ взаимодействия пользователя с
              веб-приложением. Он представляет собой совокупность элементов и
              функциональности, которые пользователь может видеть и использовать
              на веб-странице.
            </p>
            <p>
              UI - User Interface - это термин, который используется в контексте
              разработки программного обеспечения и означает интерфейс
              пользователя. Он представляет собой то, через что мы
              взаимодействуем с приложением или сайтом.
            </p>
            <p>
              Библиотека - это набор готовых функций и инструментов, которые мы
              можем использовать в своей программе по своему усмотрению.
            </p>
            <p>
              Фреймворк - это структура и правила, которые определяют, как мы
              должны организовывать свое приложение. Фреймворк контролирует
              поток выполнения вашего кода. Основное отличие между ними
              заключается в том, что с библиотекой мы контролируем поток
              выполнения, вызывая функции по своему усмотрению, а с фреймворком
              поток выполнения контролируется самим фреймворком, и мы пишем код,
              который вызывается фреймворком. Еще одно отличие заключается в
              том, что фреймворк предоставляет более высокий уровень абстракции
              и имеет более строгие правила, в то время как библиотека
              предоставляет отдельные функции для выполнения конкретных задач и
              дает нам большую свободу выбора.
            </p>
            <p>
              CRUD - это аббревиатура, которая означает "Создание" (Create),
              "Чтение" (Read), "Обновление" (Update) и "Удаление" (Delete). Это
              основные операции, которые можно выполнять с данными в базах
              данных или приложениях.
            </p>
          </div>
        </section>
      }
    />
  );
}

export default RectStart;
